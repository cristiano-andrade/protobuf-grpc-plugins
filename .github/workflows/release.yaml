name: Release Plugins
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  create_release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create_release
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: Automated Release ${{ github.ref }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
  proto-gen-grpc-plugin:
    needs: create_release
    strategy:
      matrix:
        lang: [ python ]
        os: [ ubuntu , macos ]
        include:
          - os: ubuntu
            platform: linux-x86_64
          - os: macos
            platform: darwin-x86_64
    env:
      LANG: ${{ matrix.lang }}
      OS: ${{ matrix.os }}
      PLATFORM: ${{ matrix.platform }}
    name: protoc-gen-grpc-${{matrix.lang}}-${{matrix.os}}
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: grpc/grpc
      - name: Cache Bazel
        if: runner.os == 'Linux'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      - name: Cache Bazel
        uses: actions/cache@v3
        if: runner.os == 'macOS'
        with:
          path: |
            /private/var/tmp/_bazel_runner/
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      - name: Build
        run: |
          echo "Building..."
          bazel build src/compiler:grpc_${{ env.LANG }}_plugin --enable_platform_specific_config
      - name: Package
        run: |
          cp bazel-bin/src/compiler/grpc_${{ env.LANG }}_plugin protoc-gen-grpc-${{ env.LANG }}
          tar czf protoc-gen-grpc-${{ env.LANG }}-${{ env.PLATFORM }}.tar.gz protoc-gen-grpc-${{ env.LANG }}
      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: protoc-gen-grpc-${{ env.LANG }}-${{ env.PLATFORM }}.tar.gz
          asset_path:  protoc-gen-grpc-${{ env.LANG }}-${{ env.PLATFORM }}.tar.gz
          asset_content_type: application/gzip
